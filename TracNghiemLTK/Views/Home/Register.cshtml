@model DataLTK.ThiSinh
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <!-- Meta, title, CSS, favicons, etc. -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Đăng nhập hệ thống </title>
    <!-- Bootstrap -->
    <link href="/Content/vendors/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link href="/Content/vendors/font-awesome/css/font-awesome.min.css" rel="stylesheet">
    <!-- NProgress -->
    <link href="/Content/vendors/nprogress/nprogress.css" rel="stylesheet">
    <!-- Animate.css -->
    <link href="/Content/vendors/animate.css/animate.min.css" rel="stylesheet">
    <!-- Custom Theme Style -->
    <link href="/Content/build/css/custom.min.css" rel="stylesheet">
    <script type="text/javascript">
        function ShowPreview(input) {
            if (input.files && input.files[0]) {
                var ImageDir = new FileReader();
                ImageDir.onload = function (e) {
                    $('#impPrev').attr('src', e.target.result)
                }
                ImageDir.readAsDataURL(input.files[0]);
            }
        }
    </script>
</head>
<body class="login">
    <div>
        <a class="hiddenanchor" id="signup"></a>
        <a class="hiddenanchor" id="signin"></a>
        <div class="login_wrapper">
            <div class="animate form login_form" >
                <div class="row">
                    <div class="col-md-12 col-sm-12 col-xs-12">

                        <div class="x_panel">
                            <div class="x_title">
                                <h2>Thí sinh <small>Đăng ký</small></h2>

                                <div class="clearfix"></div>
                            </div>
                            @using (Html.BeginForm("Create", "ThiSinh", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
                            {
                                @Html.AntiForgeryToken()

                                <div class="x_content form-horizontal">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">

                                        <div class="col-md-10">
                                            @Html.LabelFor(model => model.HoTen, htmlAttributes: new { @class = "control-label col-md-6" })<br /><br />
                                            @Html.EditorFor(model => model.HoTen, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                            @Html.ValidationMessageFor(model => model.HoTen, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">

                                        <div class="col-md-10">
                                            @Html.LabelFor(model => model.GioiTinh, htmlAttributes: new { @class = "control-label col-md-6" })<br /><br />
                                            @Html.DropDownList("GioiTinh",new List<SelectListItem>
                                       {
                                           new SelectListItem{ Text = "Nam", Value = "True"},
                                           new SelectListItem{ Text = "Nữ", Value = "False"}
                                       }, "Chọn giới tính", new { @class="form-control" })
                                            @Html.ValidationMessageFor(model => model.GioiTinh, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">

                                        <div class="col-md-10">
                                            @Html.LabelFor(model => model.NgaySinh, htmlAttributes: new { @class = "control-label col-md-6" })<br /><br />

                                            <div class="input-group date" id="myDatepicker">
                                                @Html.EditorFor(model => model.NgaySinh, new { htmlAttributes = new { @class = "form-control" } })
                                                <span class="input-group-addon">
                                                    <span class="glyphicon glyphicon-calendar"></span>
                                                </span>
                                                @Html.ValidationMessageFor(model => model.NgaySinh, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-10">
                                            @Html.LabelFor(model => model.DanToc, htmlAttributes: new { @class = "control-label col-md-6" })<br /><br />

                                            @Html.EditorFor(model => model.DanToc, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                            @Html.ValidationMessageFor(model => model.DanToc, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-10">
                                            @Html.LabelFor(model => model.DiaChi, htmlAttributes: new { @class = "control-label col-md-6" })<br /><br />

                                            @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                            @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                    <div class="form-group">
                                        <div class="col-md-10">
                                            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-6" })<br /><br />

                                            <img src="" class="img-thumbnail" id="impPrev" style="height:100px;width:100px;margin:5px" />
                                            <input type="file" name="fileim" class="form-control" id="imageupload" accept=".png,.jpg,.gif" onchange="ShowPreview(this)" />
                                            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-10">
                                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-6" })<br /><br />

                                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="ln_solid"></div>
                                    <div class="form-group">
                                        <div class="col-md-offset-2 col-md-10">
                                            <input type="submit" value="Đăng ký" class="btn btn-success" />
                                        </div>
                                    </div>
                                </div>}
                            <div>
                                @Html.ActionLink("Đăng nhập", "Index")
                            </div>

                        </div>
       
                       

                    </div>
                </div>
            </div>
            <div id="register" class="animate form registration_form">
                <section class="login_content">
                    <form>
                        <h1>Báo lỗi</h1>
                        <div>
                            <input type="text" class="form-control" placeholder="Tài khoản" required="" />
                        </div>
                        <div>
                            <input type="email" class="form-control" placeholder="Email" required="" />
                        </div>
                        <div>
                            <input type="text" class="form-control" placeholder="Nội dung" required="" />
                        </div>
                        <div>
                            <a class="btn btn-default submit" href="index.html">Nộp đơn</a>
                        </div>
                        <div class="clearfix"></div>
                        <div class="separator">
                            <p class="change_link">
                                Hủy báo lỗi ?
                                <a href="#signin" class="to_register"> Đăng nhập </a>
                            </p>
                            <div class="clearfix"></div>
                            <br />
                            <div>
  
                            </div>
                        </div>
                    </form>
                </section>
            </div>
        </div>
    </div>

</body>
</html>



